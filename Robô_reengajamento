{
  "name": "🤖 Reengajamento Bradesco - Otimizado",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "minutes",
              "minutesInterval": 5
            }
          ]
        }
      },
      "id": "812b3268-af5e-4faf-b11f-1fa41c2d6d2d",
      "name": "⏰ Agendamento Reengajamento",
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        240,
        300
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://automacao-abmix-evolution-api.2ckrtx.easypanel.host/message/sendText/Bradesco",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{$credentials.evolutionApi.token}}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\"number\": \"5511996163900\", \"text\": \"⚠️ 3ª TENTATIVA — AÇÃO MANUAL NECESSÁRIA\\n{{ $json.nome_normalizado || $json.Nome_Completo || $json['Nome Completo'] || 'Cliente' }}\\n{{ $json.telefone_normalizado }}\"}",
        "options": {"continueOnFail": true, "timeout": 60000}
      },
      "id": "aviso-vendedor-3a-tentativa",
      "name": "🔖 Aviso Vendedor 3ª Tentativa",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        2800,
        200
      ]
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1bUg8Kqhl_4dhIy_unfqqBYqhV9ICrGyHu3muv0LW1Hk",
          "mode": "list"
        },
        "sheetName": {
          "__rl": true,
          "value": "Log_Reengajamento",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Lead_ID": "={{$json.Lead_ID || 'sem_id'}}",
            "Nome_Cliente": "={{$json.Nome_Completo || 'Cliente'}}",
            "Nome_Normalizado": "={{$json.nome_normalizado}}",
            "Telefone": "={{$json['Telefone com DDD'] || $json.telefone_limpo}}",
            "Telefone_Normalizado": "={{$json.telefone_normalizado}}",
            "Tentativas": "={{$json.Tentativas_Reengajamento || 1}}",
            "Template_Usado": "={{$json.template_usado || 'n/a'}}",
            "Mensagem_Enviada": "={{$json.mensagem_reengajamento}}",
            "Delay_Minutos": "={{$json.delay_minutos || 5}}",
            "Status_Envio": "ok",
            "Timestamp": "={{$now.toISO()}}",
            "Proxima_Acao": "={{$json.Proxima_Acao_At}}"
          }
        },
        "options": {}
      },
      "id": "log-reengajamento-rodrigo-001",
      "name": "📊 Log Reengajamento (Rodrigo)",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        2200,
        360
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ZRCcorwTkMjhn6EC",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1bUg8Kqhl_4dhIy_unfqqBYqhV9ICrGyHu3muv0LW1Hk",
          "mode": "list"
        },
        "sheetName": {
          "__rl": true,
          "value": "Log_Falhas_Reengajamento",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Timestamp": "={{$json.log_erro_reengajamento.timestamp}}",
            "Lead_ID": "={{$json.log_erro_reengajamento.lead_id}}",
            "Tipo_Erro": "={{$json.log_erro_reengajamento.tipo_erro}}",
            "Motivo_Falha": "={{$json.log_erro_reengajamento.tipo_erro === 'telefone_invalido' ? 'Telefone com menos de 11 dígitos' : $json.log_erro_reengajamento.tipo_erro}}",
            "Mensagem_Erro": "={{$json.log_erro_reengajamento.mensagem_erro}}",
            "Tentativas": "={{$json.log_erro_reengajamento.tentativas}}",
            "Deve_Reprocessar": "={{$json.log_erro_reengajamento.deve_reprocessar}}",
            "Contexto": "={{$json.log_erro_reengajamento.contexto}}",
            "Nome_Cliente": "={{$json.log_erro_reengajamento.dados_originais.nome}}",
            "Nome_Normalizado": "={{$json.nome_normalizado}}",
            "Telefone_Cliente": "={{$json['Telefone com DDD'] || $json.telefone_limpo}}",
            "Telefone_Normalizado": "={{$json.telefone_normalizado}}",
            "Email_Cliente": "={{$json.log_erro_reengajamento.dados_originais.email}}",
            "Status_Envio": "erro",
            "Mensagem_Enviada": "={{$json.mensagem_reengajamento}}"
          }
        },
        "options": {}
      },
      "id": "log-falhas-rodrigo-001",
      "name": "📊 Log Falhas Reengajamento (Rodrigo)",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        2000,
        360
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ZRCcorwTkMjhn6EC",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "if-http-2xx-min",
              "leftValue": "={{ $json.statusCode || 0 }}",
              "rightValue": "200",
              "operator": {
                "type": "number",
                "operation": "largerEqual"
              }
            },
            {
              "id": "if-http-2xx-max",
              "leftValue": "={{ $json.statusCode || 0 }}",
              "rightValue": "300",
              "operator": {
                "type": "number",
                "operation": "smaller"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "if-envio-2xx-001",
      "name": "✅ IF Envio 2xx",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1900,
        240
      ]
    },
    {
      "parameters": {
        "jsCode": "// Marcar telefone inválido para log em Log_Falhas_Reengajamento\nconst items = $input.all();\nconst out = items.map((it) => {\n  const d = it.json;\n  const telefoneBruto = String(d.telefone_normalizado || d['Telefone com DDD'] || '').replace(/\\\\D/g, '');\n  const log = {\n    timestamp: new Date().toISOString(),\n    lead_id: d.Lead_ID || 'desconhecido',\n    tipo_erro: 'telefone_invalido',\n    mensagem_erro: `telefone_comprimento_${telefoneBruto.length}`,\n    tentativas: Number(d.Tentativas_Reengajamento || 0),\n    deve_reprocessar: false,\n    contexto: 'reengajamento',\n    dados_originais: {\n      nome: d.nome_normalizado || d.Nome_Completo || d['Nome Completo'] || 'Cliente',\n      telefone: d['Telefone com DDD'] || d.telefone_limpo || '',\n      email: d.Email || ''\n    }\n  };\n  return { json: { ...d, log_erro_reengajamento: log, mensagem_reengajamento: d.mensagem_reengajamento || '' } };\n});\nreturn out;"
      },
      "id": "codigo-telefone-invalido-001",
      "name": "🛑 Telefone Inválido (Log)",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1700,
        120
      ]
    },
    {
      "parameters": {
        "operation": "read",
        "documentId": {
          "__rl": true,
          "value": "1bGuTWcNCMjTed91deAZo8eGwy38tqWh8C7rU6PPG27M",
          "mode": "list"
        },
        "sheetName": {
          "__rl": true,
          "value": "Leads_Brutos",
          "mode": "name"
        },
        "options": {
          "range": "A:Z",
          "includeEmptyCells": false
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Status",
              "lookupValue": "Aguardando_5min"
            },
            {
              "lookupColumn": "Ultima_Resposta_Cliente",
              "lookupValue": "",
              "condition": "isEmpty"
            },
            {
              "lookupColumn": "Tentativas_Reengajamento",
              "lookupValue": "3",
              "condition": "smaller"
            }
          ]
        }
      },
      "id": "663a32b1-539f-4832-85f6-7e48c9e066b6",
      "name": "📊 Buscar Leads Pendentes",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        460,
        300
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ZRCcorwTkMjhn6EC",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// ========================================\n// FILTRAR LEADS PARA REENGAJAMENTO - HORÁRIO COMERCIAL\n// ========================================\n// Filtra leads respeitando horário comercial (8h-18h, seg-sex)\n\nconst dados = $input.all();\nconst leadsParaReengajamento = [];\n\n// ========== VERIFICAÇÃO DE HORÁRIO COMERCIAL ==========\nconst agora = new Date();\nconst hora = agora.getHours();\nconst dia = agora.getDay(); // 0=domingo, 1=segunda, ..., 6=sábado\n\n// Horário comercial: 8h às 18h, segunda a sexta\nconst HORARIO_COMERCIAL = {\n  hora_inicio: 8,\n  hora_fim: 18,\n  dias_semana: [1, 2, 3, 4, 5] // Segunda a sexta\n};\n\n// Verificar se está no horário comercial\nconst estaNoHorarioComercial = (\n  hora >= HORARIO_COMERCIAL.hora_inicio &&\n  hora < HORARIO_COMERCIAL.hora_fim &&\n  HORARIO_COMERCIAL.dias_semana.includes(dia)\n);\n\nconsole.log(`Horário atual: ${hora}h, Dia: ${dia} (0=dom, 1=seg...)`);\nconsole.log(`Horário comercial: ${estaNoHorarioComercial ? 'SIM' : 'NÃO'}`);\n\n// Se NÃO está no horário comercial, não processa nenhum lead\nif (!estaNoHorarioComercial) {\n  console.log('⏰ Fora do horário comercial - aguardando próximo horário');\n  return [];\n}\n\n// ========== CONFIGURAÇÕES DE REENGAJAMENTO ==========\nconst CONFIG_REENGAJAMENTO = {\n  status_para_reengajamento: ['Aguardando_5min'],\n  max_tentativas: 3,\n  intervalo_minutos: 5 // Intervalo mínimo entre tentativas\n};\n\n// Função para verificar se pode reengajar\nfunction podeReengajar(lead) {\n  // Verificar se tem dados básicos\n  if (!lead.Lead_ID || !lead['Telefone com DDD']) {\n    return false;\n  }\n  \n  // Verificar se cliente já respondeu\n  if (lead.Ultima_Resposta_Cliente && lead.Ultima_Resposta_Cliente.trim() !== '') {\n    return false;\n  }\n  \n  // Verificar status\n  if (!CONFIG_REENGAJAMENTO.status_para_reengajamento.includes(lead.Status)) {\n    return false;\n  }\n  \n  // Verificar tentativas\n  const tentativas = parseInt(lead.Tentativas_Reengajamento || 0);\n  if (tentativas >= CONFIG_REENGAJAMENTO.max_tentativas) {\n    return false;\n  }\n  \n  // Verificar Proxima_Acao_At\n  if (lead.Proxima_Acao_At) {\n    const proximaAcao = new Date(lead.Proxima_Acao_At);\n    \n    if (agora < proximaAcao) {\n      return false; // Ainda não é hora\n    }\n  }\n  \n  // Verificar última tentativa\n  if (lead.Ultima_Tentativa_Reengajamento) {\n    const ultimaTentativa = new Date(lead.Ultima_Tentativa_Reengajamento);\n    const diferencaMinutos = (agora - ultimaTentativa) / (1000 * 60);\n    \n    if (diferencaMinutos < CONFIG_REENGAJAMENTO.intervalo_minutos) {\n      return false;\n    }\n  }\n  \n  return true;\n}\n\n// ========== PROCESSAR LEADS (APENAS NO HORÁRIO COMERCIAL) ==========\nfor (const item of dados) {\n  const lead = item.json;\n  \n  if (podeReengajar(lead)) {\n    leadsParaReengajamento.push({\n      ...lead,\n      motivo_reengajamento: 'Tempo_Esgotado_Horario_Comercial',\n      prioridade: lead.Score_Inicial || 0,\n      timestamp_filtro: agora.toISOString(),\n      horario_comercial: true,\n      hora_processamento: hora,\n      dia_processamento: dia,\n      nome_normalizado: (lead.Nome_Completo || lead['Nome Completo'] || 'Cliente'),\n      telefone_normalizado: String(lead['Telefone com DDD'] || lead.telefone_limpo || '').replace(/\\D/g, ''),\n      filtros_aplicados: {\n        horario_comercial: true,\n        sem_resposta_cliente: true,\n        status_valido: true,\n        tentativas_ok: true,\n        tempo_ok: true\n      }\n    });\n  }\n}\n\n// Ordenar por prioridade (score mais alto primeiro)\nleadsParaReengajamento.sort((a, b) => (b.prioridade || 0) - (a.prioridade || 0));\n\nconsole.log(`✅ Leads filtrados para reengajamento: ${leadsParaReengajamento.length}`);\nconsole.log(`📊 Total leads processados: ${dados.length}`);\nconsole.log(`⏰ Horário: ${hora}h (comercial: 8h-18h)`);\n\nreturn leadsParaReengajamento.map(lead => ({ json: lead }));"
      },
      "id": "22fd0337-dfe9-48b4-91ce-64f8e689592c",
      "name": "🔍 Filtrar Leads Reengajamento",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        680,
        300
      ]
    },
    {
      "parameters": {
        "jsCode": "// ========================================\n// VARIAÇÕES DE MENSAGENS - REENGAJAMENTO\n// ========================================\n// Cria variações específicas para reengajamento (1 saída por lead)\n\nconst items = $input.all();\n\nconst templatesReengajamento = [\n  { id: 'reeng_horario_1', template: 'Bom dia {nome}! 🌅 Vi que você se interessou no Bradesco Saúde. Posso ajudar?', tom: 'matinal' },\n  { id: 'reeng_horario_2', template: 'Boa tarde {nome}! ☀️ Ainda estou disponível para tirar suas dúvidas sobre os planos.', tom: 'vespertino' },\n  { id: 'reeng_1', template: 'Oi {nome}, tudo bem? 💙 Vi que você se interessou no Bradesco Saúde. Posso tirar alguma dúvida?', tom: 'amigavel' },\n  { id: 'reeng_2', template: 'Olá {nome}, ainda estou por aqui! 😊 Posso preparar sua proposta, é super rápido.', tom: 'profissional' },\n  { id: 'reeng_3', template: 'Oi {nome}, que tal conversarmos sobre o melhor plano para você? 🎯', tom: 'direto' },\n  { id: 'reeng_4', template: 'Olá {nome}, vi seu interesse no Bradesco Saúde! 💙 Posso ajudar com alguma informação?', tom: 'acolhedor' },\n  { id: 'reeng_5', template: 'Oi {nome}, ainda estou disponível para te ajudar! 😊 Qual sua dúvida sobre os planos?', tom: 'disponivel' },\n  { id: 'reeng_6', template: 'Olá {nome}, tudo bem? 💙 Que tal finalizarmos sua cotação do Bradesco Saúde?', tom: 'finalizacao' }\n];\n\nfunction escolherTemplatePorTentativa(tentativas) {\n  if (tentativas === 1) {\n    const arr = templatesReengajamento.filter(t => ['amigavel', 'acolhedor', 'disponivel'].includes(t.tom));\n    return arr[Math.floor(Math.random() * arr.length)];\n  }\n  if (tentativas === 2) {\n    const arr = templatesReengajamento.filter(t => ['profissional', 'direto'].includes(t.tom));\n    return arr[Math.floor(Math.random() * arr.length)];\n  }\n  if (tentativas === 3) {\n    const arr = templatesReengajamento.filter(t => ['finalizacao', 'direto'].includes(t.tom));\n    return arr[Math.floor(Math.random() * arr.length)];\n  }\n  return templatesReengajamento[Math.floor(Math.random() * templatesReengajamento.length)];\n}\n\nfunction personalizarMensagem(template, dados) {\n  const nome = dados.Nome_Completo || dados['Nome Completo'] || 'Cliente';\n  return template.template\n    .replace(/{nome}/g, nome)\n    .replace(/{plano}/g, 'Bradesco Saúde');\n}\n\nconst out = items.map((it) => {\n  const dados = it.json;\n  const tentativas = parseInt(dados.Tentativas_Reengajamento || 1);\n  const templateEscolhido = escolherTemplatePorTentativa(tentativas);\n  const mensagemFinal = personalizarMensagem(templateEscolhido, dados);\n  return { json: {\n    ...dados,\n    mensagem_reengajamento: mensagemFinal,\n    template_usado: templateEscolhido.id,\n    tom_mensagem: templateEscolhido.tom,\n    tentativa_reengajamento: tentativas,\n    timestamp_mensagem: new Date().toISOString()\n  }};\n});\n\nconsole.log(`Mensagens geradas: ${out.length}`);\nreturn out;"
      },
      "id": "288bfbc4-5aef-41ac-9f1b-b6cc17475879",
      "name": "💬 Variações Mensagens Reengajamento",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1120,
        300
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://automacao-abmix-evolution-api.2ckrtx.easypanel.host/message/sendText/Bradesco",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{$credentials.evolutionApi.token}}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number\": \"{{ (()=>{ const n = String(($json.telefone_normalizado || $json['Telefone com DDD'] || $json.telefone_limpo || '').replace(/\\\\D/g,'')); if(n.length===11) return '55'+n; if(n.length===13 && n.startsWith('55')) return n; return '55'+n; })() }}\",\n  \"text\": \"{{$json.mensagem_reengajamento}}\"\n}",
        "options": {"continueOnFail": true, "timeout": 60000, "fullResponse": true}
      },
      "id": "f46fd472-6697-4cff-9444-71226cac5d19",
      "name": "📱 Enviar WhatsApp Reengajamento",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        1340,
        300
      ]
    },
    {
      "parameters": {
        "jsCode": "// ========================================\n// CONTROLE DE FALHAS - REENGAJAMENTO\n// ========================================\n// Gerencia falhas específicas do reengajamento (1 saída por lead)\n\nconst items = $input.all();\n\nfunction classificarErro(erro) {\n  if (!erro) return 'sucesso';\n  const mensagem = String(erro).toLowerCase();\n  if (mensagem.includes('timeout') || mensagem.includes('time out')) return 'timeout';\n  if (mensagem.includes('network') || mensagem.includes('connection')) return 'rede';\n  if (mensagem.includes('auth') || mensagem.includes('unauthorized')) return 'autenticacao';\n  if (mensagem.includes('rate limit') || mensagem.includes('quota')) return 'limite';\n  if (mensagem.includes('invalid') || mensagem.includes('malformed')) return 'dados_invalidos';\n  return 'desconhecido';\n}\n\nfunction deveReprocessar(tipoErro, tentativas) {\n  const maxTentativas = 3;\n  if (tentativas >= maxTentativas) return false;\n  const errosReprocessaveis = ['timeout', 'rede', 'limite'];\n  return errosReprocessaveis.includes(tipoErro);\n}\n\nconst out = items.map((it) => {\n  const dados = it.json;\n  const erro = dados.error || null;\n  const tipoErro = classificarErro(erro);\n  const tentativas = (dados.tentativas_erro_reengajamento || 0) + 1;\n  const deveReprocessarErro = deveReprocessar(tipoErro, tentativas);\n  const logErro = {\n    timestamp: new Date().toISOString(),\n    lead_id: dados.Lead_ID || 'desconhecido',\n    tipo_erro: tipoErro,\n    mensagem_erro: String(erro || 'sucesso'),\n    tentativas: tentativas,\n    deve_reprocessar: deveReprocessarErro,\n    contexto: 'reengajamento',\n    dados_originais: { nome: dados.Nome_Completo, telefone: dados['Telefone com DDD'], email: dados.Email }\n  };\n  if (erro) {\n    console.error(`Erro reengajamento: ${tipoErro} (tentativa ${tentativas})`);\n    console.error('Log:', logErro);\n  }\n  return { json: {\n    ...dados,\n    erro_processado: true,\n    tipo_erro: tipoErro,\n    tentativas_erro_reengajamento: tentativas,\n    deve_reprocessar: deveReprocessarErro,\n    log_erro_reengajamento: logErro,\n    status_final: deveReprocessarErro ? 'reprocessar' : (erro ? 'falha' : 'sucesso')\n  }};\n});\n\nconsole.log(`Itens processados em controle de falhas: ${out.length}`);\nreturn out;"
      },
      "id": "9346ec1b-f922-419e-b367-578696033659",
      "name": "🚨 Controle Falhas Reengajamento",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1560,
        300
      ]
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1bGuTWcNCMjTed91deAZo8eGwy38tqWh8C7rU6PPG27M",
          "mode": "list"
        },
        "sheetName": {
          "__rl": true,
          "value": "Leads_Brutos",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Lead_ID": "={{$json.Lead_ID}}",
            "Tentativas_Reengajamento": "={{ $json.Tentativas_Reengajamento }}",
            "Ultima_Tentativa_Reengajamento": "={{ $now.toISO() }}",
            "Status_Reengajamento": "={{ ($json.Tentativas_Reengajamento) >= 3 ? 'em_supervisao' : 'em_andamento' }}",
            "Template_Usado": "={{ $json.template_usado }}",
            "Tom_Mensagem": "={{ $json.tom_mensagem }}",
            "Status": "={{ ($json.Tentativas_Reengajamento) >= 3 ? 'Supervisor_Acao' : 'Aguardando_5min' }}",
            "Proxima_Acao_At": "={{ $json.Proxima_Acao_At }}",
            "Delay_Minutos": "={{ $json.delay_minutos }}"
          }
        },
        "options": {
          "continueOnFail": true
        }
      },
      "id": "ef65d60e-0f6f-4fb5-b724-f74d4100ef88",
      "name": "📊 Atualizar Status Reengajamento",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        1780,
        300
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ZRCcorwTkMjhn6EC",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1bGuTWcNCMjTed91deAZo8eGwy38tqWh8C7rU6PPG27M",
          "mode": "list"
        },
        "sheetName": {
          "__rl": true,
          "value": "Log_Falhas_Reengajamento",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Timestamp": "={{$json.log_erro_reengajamento.timestamp}}",
            "Lead_ID": "={{$json.log_erro_reengajamento.lead_id}}",
            "Tipo_Erro": "={{$json.log_erro_reengajamento.tipo_erro}}",
            "Motivo_Falha": "={{$json.log_erro_reengajamento.tipo_erro === 'telefone_invalido' ? 'Telefone com menos de 11 dígitos' : $json.log_erro_reengajamento.tipo_erro}}",
            "Mensagem_Erro": "={{$json.log_erro_reengajamento.mensagem_erro}}",
            "Tentativas": "={{$json.log_erro_reengajamento.tentativas}}",
            "Deve_Reprocessar": "={{$json.log_erro_reengajamento.deve_reprocessar}}",
            "Contexto": "={{$json.log_erro_reengajamento.contexto}}",
            "Nome_Cliente": "={{$json.log_erro_reengajamento.dados_originais.nome}}",
            "Nome_Normalizado": "={{$json.nome_normalizado}}",
            "Telefone_Cliente": "={{$json['Telefone com DDD'] || $json.telefone_limpo}}",
            "Telefone_Normalizado": "={{$json.telefone_normalizado}}",
            "Email_Cliente": "={{$json.log_erro_reengajamento.dados_originais.email}}",
            "Status_Envio": "erro",
            "Mensagem_Enviada": "={{$json.mensagem_reengajamento}}"
          }
        },
        "options": {}
      },
      "id": "d9620364-c0cc-4357-b6be-ca363b52dedf",
      "name": "📊 Log Falhas Reengajamento",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        2000,
        300
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ZRCcorwTkMjhn6EC",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "verificar-tentativas",
              "leftValue": "={{($json.Tentativas_Reengajamento || 0) + 1}}",
              "rightValue": "3",
              "operator": {
                "type": "number",
                "operation": "smallerEqual"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "verificacao-tentativas-001",
      "name": "🔢 Verificar Tentativas <= 3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1000,
        200
      ]
    },
    {
      "parameters": {
        "jsCode": "// ========================================\n// DELAY ESCALONADO - REENGAJAMENTO\n// ========================================\n// 1ª tentativa: 5min | 2ª: 30min | 3ª+: 120min\n// Anti-pico por item (ms): 3000 + i*2000 + rand(0–1500)\n\nconst items = $input.all();\n\nconst out = items.map((it, i) => {\n  const dados = it.json;\n  const tent = Number(dados.Tentativas_Reengajamento || 0) + 1;\n  const delayMin = tent === 1 ? 5 : (tent === 2 ? 30 : 120);\n  const proximaAcao = $now.plus(delayMin, 'minutes').toISO();\n  const delayMs = 3000 + i * 2000 + Math.floor(Math.random() * 1501);\n  return { json: {\n    ...dados,\n    Tentativas_Reengajamento: tent,\n    delay_minutos: delayMin,\n    delay_ms: delayMs,\n    Proxima_Acao_At: proximaAcao,\n    timestamp_delay: $now.toISO()\n  }};\n});\n\nconsole.log(`Delays calculados para ${out.length} itens.`);\nreturn out;"
      },
      "id": "delay-escalonado-001",
      "name": "⏰ Calcular Delay Escalonado",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1400,
        200
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://automacao-abmix-evolution-api.2ckrtx.easypanel.host/chat/typing/Bradesco",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{$credentials.evolutionApi.token}}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number\": \"{{ (()=>{ const n = String(($json.telefone_normalizado || $json['Telefone com DDD'] || $json.telefone_limpo || '').replace(/\\\\D/g,'')); if(n.length===11) return '55'+n; if(n.length===13 && n.startsWith('55')) return n; return '55'+n; })() }}\",\n  \"state\": \"on\"\n}",
        "options": {"continueOnFail": true, "timeout": 30000}
      },
      "id": "wa-typing-on-001",
      "name": "WA Digitando ON",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        1600,
        200
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://automacao-abmix-evolution-api.2ckrtx.easypanel.host/chat/typing/Bradesco",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{$credentials.evolutionApi.token}}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number\": \"{{ (()=>{ const n = String(($json.telefone_normalizado || $json['Telefone com DDD'] || $json.telefone_limpo || '').replace(/\\\\D/g,'')); if(n.length===11) return '55'+n; if(n.length===13 && n.startsWith('55')) return n; return '55'+n; })() }}\",\n  \"state\": \"off\"\n}",
        "options": {"continueOnFail": true, "timeout": 30000}
      },
      "id": "wa-typing-off-001",
      "name": "WA Digitando OFF",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        2000,
        200
      ]
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://automacao-abmix-evolution-api.2ckrtx.easypanel.host/message/sendText/Bradesco",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "Bearer {{$credentials.evolutionApi.token}}"
            },
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"number\": \"{{ (()=>{ const n = String(($env.SUPERVISOR_WHATS || '11996163900').replace(/\\\\D/g,'')); if(n.length===11) return '55'+n; if(n.length===13 && n.startsWith('55')) return n; return '55'+n; })() }}\",\n  \"text\": \"🧭 Lead sem resposta (Robô 5min)\\n👤 {{ $json.nome_normalizado || $json.Nome_Completo || $json['Nome Completo'] || 'Cliente' }}\\n📞 {{ (()=>{ const n = String(($json.telefone_normalizado || $json['Telefone com DDD'] || $json.telefone_limpo || '').replace(/\\\\D/g,'')); if(n.length===11) return '55'+n; if(n.length===13 && n.startsWith('55')) return n; return '55'+n; })() }}\\n⭐ Qualificação: {{ $json.classificacao || 'N/A' }} (Score: {{ $json.score || 0 }})\\n🔢 Tentativas: {{ $json.Tentativas_Reengajamento || 1 }}\\n⏭ Próxima ação: {{ $json.Proxima_Acao_At || 'N/A' }}\\n🎯 Atribuído a Rodrigo\\n🆔 {{ $json.Lead_ID || 'sem_id' }}\\n\"\n}",
        "options": {"continueOnFail": true, "timeout": 30000}
      },
      "id": "copia-rodrigo-001",
      "name": "👨‍💼 Cópia para Rodrigo",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        2400,
        200
      ]
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1bGuTWcNCMjTed91deAZo8eGwy38tqWh8C7rU6PPG27M",
          "mode": "list"
        },
        "sheetName": {
          "__rl": true,
          "value": "Log_Reengajamento",
          "mode": "name"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Lead_ID": "={{$json.Lead_ID || 'sem_id'}}",
            "Nome_Cliente": "={{$json.Nome_Completo || 'Cliente'}}",
            "Nome_Normalizado": "={{$json.nome_normalizado}}",
            "Telefone": "={{$json['Telefone com DDD'] || $json.telefone_limpo}}",
            "Telefone_Normalizado": "={{$json.telefone_normalizado}}",
            "Tentativas": "={{$json.Tentativas_Reengajamento || 1}}",
            "Template_Usado": "={{$json.template_usado || 'n/a'}}",
            "Mensagem_Enviada": "={{$json.mensagem_reengajamento}}",
            "Delay_Minutos": "={{$json.delay_minutos || 5}}",
            "Status_Envio": "ok",
            "Timestamp": "={{$now.toISO()}}",
            "Proxima_Acao": "={{$json.Proxima_Acao_At}}"
          }
        },
        "options": {}
      },
      "id": "log-reengajamento-001",
      "name": "📊 Log Reengajamento",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4,
      "position": [
        2200,
        200
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "ZRCcorwTkMjhn6EC",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "verificar-3a-tentativa",
              "leftValue": "={{$json.Tentativas_Reengajamento || 0}}",
              "rightValue": "3",
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "if-3a-tentativa-001",
      "name": "🔍 IF É 3ª Tentativa",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        2600,
        200
      ]
    },
    {
      "parameters": {
        "amount": "={{ Math.max(1, Math.floor(($json.delay_ms || 0)/1000)) }}",
        "unit": "seconds",
        "options": {
          "continueOnFail": true,
          "alwaysOutputData": true
        }
      },
      "id": "wait-anti-pico-001",
      "name": "⏳ Anti-pico Wait",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        1500,
        230
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "if-telefone-valido-001",
              "leftValue": "={{ String($json.telefone_normalizado || $json['Telefone com DDD'] || '').replace(/\\\\D/g,'').length }}",
              "rightValue": "11",
              "operator": {
                "type": "number",
                "operation": "largerEqual"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "if-telefone-valido-001",
      "name": "✅ IF Telefone Válido",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        1500,
        160
      ]
    }
  ],
  "connections": {
    "⏰ Agendamento Reengajamento": {
      "main": [
        [
          {
            "node": "📊 Buscar Leads Pendentes",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "📊 Buscar Leads Pendentes": {
      "main": [
        [
          {
            "node": "🔍 Filtrar Leads Reengajamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🔍 Filtrar Leads Reengajamento": {
      "main": [
        [
          {
            "node": "🔢 Verificar Tentativas <= 3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "💬 Variações Mensagens Reengajamento": {
      "main": [
        [
          {
            "node": "✅ IF Telefone Válido",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "📱 Enviar WhatsApp Reengajamento": {
      "main": [
        [
          {
            "node": "✅ IF Envio 2xx",
            "type": "main",
            "index": 0
          }
        ]
      ],
      "error": [
        [
          {
            "node": "🚨 Controle Falhas Reengajamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "✅ IF Envio 2xx": {
      "main": [
        [
          {
            "node": "📊 Atualizar Status Reengajamento",
            "type": "main",
            "index": 0
          },
          {
            "node": "WA Digitando OFF",
            "type": "main",
            "index": 0
          },
          {
            "node": "👨‍💼 Cópia para Rodrigo",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    },
    "📊 Atualizar Status Reengajamento": {
      "main": [
        [
          {
            "node": "📊 Log Reengajamento",
            "type": "main",
            "index": 0
          },
          {
            "node": "📊 Log Reengajamento (Rodrigo)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🔢 Verificar Tentativas <= 3": {
      "main": [
        [
          {
            "node": "⏰ Calcular Delay Escalonado",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "⏰ Calcular Delay Escalonado": {
      "main": [
        [
          {
            "node": "💬 Variações Mensagens Reengajamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WA Digitando ON": {
      "main": [
        [
          {
            "node": "📱 Enviar WhatsApp Reengajamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WA Digitando OFF": {
      "main": [
        []
      ]
    },
    "📊 Log Reengajamento": {
      "main": [
        [
          {
            "node": "🔍 IF É 3ª Tentativa",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🚨 Controle Falhas Reengajamento": {
      "main": [
        [
          {
            "node": "📊 Log Falhas Reengajamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "📊 Log Falhas Reengajamento": {
      "main": [
        [
          {
            "node": "👨‍💼 Cópia para Rodrigo",
            "type": "main",
            "index": 0
          },
          {
            "node": "📊 Log Falhas Reengajamento (Rodrigo)",
            "type": "main",
            "index": 0
          },
          {
            "node": "WA Digitando OFF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "✅ IF Telefone Válido": {
      "main": [
        [
          {
            "node": "⏳ Anti-pico Wait",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "🛑 Telefone Inválido (Log)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🛑 Telefone Inválido (Log)": {
      "main": [
        [
          {
            "node": "📊 Log Falhas Reengajamento",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "⏳ Anti-pico Wait": {
      "main": [
        [
          {
            "node": "WA Digitando ON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "🔍 IF É 3ª Tentativa": {
      "main": [
        [
          {
            "node": "🔖 Aviso Vendedor 3ª Tentativa",
            "type": "main",
            "index": 0
          }
        ],
        []
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "timezone": "America/Sao_Paulo"
  },
  "staticData": {},
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-09-22T03:54:06.425507",
  "versionId": "3fa9511d-1875-4707-af06-5e84a823ae04"
}
